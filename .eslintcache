[{"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\index.js":"1","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\App.js":"2","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\aws-exports.js":"3","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Index.js":"4","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Welcome.js":"5","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\layout\\Header.js":"6","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\layout\\Footer.js":"7","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\layout\\SignIn.js":"8","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Upload.js":"9","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Home.js":"10","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\FindImage.js":"11","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Login.js":"12","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Album.jsx":"13","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\ImageGallery.js":"14","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\SearchImage.js":"15","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\graphql\\queries.js":"16","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\graphql\\mutations.js":"17"},{"size":230,"mtime":1604733405957,"results":"18","hashOfConfig":"19"},{"size":1310,"mtime":1606769803849,"results":"20","hashOfConfig":"19"},{"size":1544,"mtime":1606806285624,"results":"21","hashOfConfig":"19"},{"size":469,"mtime":1606762210518,"results":"22","hashOfConfig":"19"},{"size":491,"mtime":1606762404469,"results":"23","hashOfConfig":"19"},{"size":1985,"mtime":1606772960600,"results":"24","hashOfConfig":"19"},{"size":209,"mtime":1606765351063,"results":"25","hashOfConfig":"19"},{"size":803,"mtime":1606768744226,"results":"26","hashOfConfig":"19"},{"size":4624,"mtime":1606768730926,"results":"27","hashOfConfig":"19"},{"size":4718,"mtime":1606712191833,"results":"28","hashOfConfig":"19"},{"size":1799,"mtime":1606789451879,"results":"29","hashOfConfig":"19"},{"size":784,"mtime":1606762233103,"results":"30","hashOfConfig":"19"},{"size":2344,"mtime":1606768762286,"results":"31","hashOfConfig":"19"},{"size":4015,"mtime":1606769867987,"results":"32","hashOfConfig":"19"},{"size":4001,"mtime":1606772181554,"results":"33","hashOfConfig":"19"},{"size":1372,"mtime":1606802588556,"results":"34","hashOfConfig":"19"},{"size":1201,"mtime":1606802588662,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"i71lh3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\index.js",[],["79","80"],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\App.js",["81"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n//amplify exports\r\nimport Amplify, { Auth, Hub } from \"aws-amplify\";\r\nimport { AmplifyAuthenticator } from \"@aws-amplify/ui-react\";\r\nimport awsExports from \"./aws-exports\";\r\nimport { AmazonAIPredictionsProvider } from \"@aws-amplify/predictions\";\r\n\r\n//components imports\r\nimport Index from \"./components/Index\";\r\nimport Welcome from \"./components/Welcome\";\r\n\r\nAmplify.configure(awsExports);\r\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(\"\");\r\n  useEffect(() => {\r\n    document.body.style.background =\r\n      \"linear-gradient(45deg, #51547e 30%, #0a3f74 90%)\";\r\n\r\n    //finding and setting loggedin User\r\n    let updateUser = async (authState) => {\r\n      try {\r\n        let user = await Auth.currentAuthenticatedUser();\r\n        setUser(user);\r\n      } catch {\r\n        setUser(null);\r\n      }\r\n    };\r\n    Hub.listen(\"auth\", updateUser); // listen for login/signup events\r\n    updateUser(); // check manually the first time because we won't get a Hub event\r\n    return () => Hub.remove(\"auth\", updateUser); // cleanup\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {user ? <Welcome user={user}/> : <Index />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\aws-exports.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Index.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Welcome.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\layout\\Header.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\layout\\Footer.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\layout\\SignIn.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Upload.js",["82","83","84","85","86","87","88","89","90","91"],"import React, { useState, useEffect } from \"react\";\r\nimport { Storage, API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { createPicture } from \"../graphql/mutations\";\r\nimport Predictions from \"@aws-amplify/predictions\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./Upload.css\";\r\nfunction Upload(props) {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [alert, setAlert] = useState(false);\r\n  const [tag, setTag] = useState(\"\");\r\n  const [labels, setLabels] = useState([]);\r\n  const [celeb, setCeleb] = useState([]);\r\n\r\n  const findImageLabels = async (file) => {\r\n    console.log(\"inside Label\");\r\n    return Predictions.identify({\r\n      labels: {\r\n        source: {\r\n          file,\r\n        },\r\n        type: \"LABELS\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"lables 1\", response);\r\n        let labels = response.labels.map((label) => {\r\n          if (label.metadata.confidence > 70) return label.name;\r\n        });\r\n        console.log(\"lables are\", labels);\r\n        console.log(\"inside 3\", labels.filter(Boolean));\r\n        return labels.filter(Boolean);\r\n      })\r\n\r\n      .catch((err) => console.log({ err }));\r\n  };\r\n\r\n  const celebritySearch = async (file) => {\r\n    console.log(\"Inside celeb\");\r\n    return Predictions.identify({\r\n      entities: {\r\n        source: {\r\n          file,\r\n        },\r\n        celebrityDetection: true, // boolean. It will only show detected celebrities\r\n      },\r\n    })\r\n      .then(({ response }) => {\r\n        response.entities.forEach(({ boundingBox, landmarks, metadata }) => {\r\n          const { name, urls } = metadata; // celebrity info\r\n          let celeb = response.entities.map((label) => {\r\n            if (celeb.metadata.confidence > 70) return celeb.name;\r\n          });\r\n          return celeb.filter(Boolean);\r\n        });\r\n      })\r\n      .catch((err) => console.log({ err }));\r\n  };\r\n\r\n  const sendImageToDB = async (image) => {\r\n    console.log(\"inside db write\", image);\r\n    try {\r\n      await API.graphql(graphqlOperation(createPicture, { input: image }));\r\n    } catch (err) {\r\n      console.log(\"db write error\");\r\n    }\r\n  };\r\n  const handleOnFileChange = (e) => {\r\n    let selectedFile = e.target.files[0];\r\n    setSelectedFile(selectedFile);\r\n    console.log(\"handlefileschangexxxxx\", selectedFile);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"inside handlechange\");\r\n    e.preventDefault();\r\n    console.log(\"{tag}\", { tag });\r\n    console.log(\"{selectedFile}\", selectedFile);\r\n\r\n    //storing image in S3\r\n    Storage.put(selectedFile.name, selectedFile, {\r\n      contentType: \"image/png\",\r\n    }).then((result) => {\r\n      findImageLabels(selectedFile).then((labels) => {\r\n        console.log(\"m returnddd\", labels);\r\n        setLabels(labels);\r\n\r\n        // this.selectedFileState({ file: URL.createObjectURL(selectedFile) });\r\n\r\n        //this.selectedFileState({ file: URL.createObjectURL(selectedFile) });\r\n        //console.log(\"srccccc\", this.selectedFile);\r\n        const image = {\r\n          name: selectedFile.name,\r\n          tag: tag,\r\n          labels: labels,\r\n          file: {\r\n            bucket: awsExports.aws_user_files_s3_bucket,\r\n            region: awsExports.aws_user_files_s3_bucket_region,\r\n            key: selectedFile.name,\r\n          },\r\n        };\r\n        console.log(\"image payload\", image);\r\n        setAlert(true);\r\n        sendImageToDB(image);\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {alert ? (\r\n        <div class=\"alert alert-success alert-dismissible\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"close\"\r\n            data-dismiss=\"alert\"\r\n            onClick={() => {\r\n              setAlert(false);\r\n            }}\r\n          >\r\n            &times;\r\n          </button>\r\n          <strong>Success!</strong> Image Sucessfully uploaded!!!\r\n        </div>\r\n      ) : null}\r\n      <form className=\"jumbotron\" onSubmit={handleChange}>\r\n        <input type=\"file\" onChange={handleOnFileChange} />\r\n        <input\r\n          type=\"text\"\r\n          value={tag}\r\n          placeholder=\"Enter image Tag Here before uploading your file\"\r\n          onChange={({ target }) => setTag(target.value)}\r\n        />\r\n\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n\r\n    // {alert ? (\r\n    //   <div>\r\n    //     <img\r\n    //       className=\"jumbotron\"\r\n    //       src={selectedFile}\r\n    //       alt=\" uploading area...\"\r\n    //       width=\"300\"\r\n    //       height=\"450\"\r\n    //     />\r\n    //   </div>\r\n    // ) : null}\r\n  );\r\n}\r\nexport default Upload;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Home.js",["92","93","94","95"],"import React, { useState, useEffect } from \"react\";\r\nimport ImageGallery from \"./ImageGallery\";\r\nimport SearchImage from \"./SearchImage\";\r\nimport { Storage, API, graphqlOperation } from \"aws-amplify\";\r\nimport { listPictures, getPicture, searchPictures } from \"../graphql/queries\";\r\nimport { updatePicture, deletePicture } from \"../graphql/mutations\";\r\n\r\nfunction Home(props) {\r\n  const [images, setImages] = useState([]);\r\n  const [picture] = useState(\"\");\r\n  const [myAlert, setMyAlert] = useState(false);\r\n  // const [searchTag, setSearchTag] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllImagesToState();\r\n  }, [picture]);\r\n\r\n  //retrieving response in json and formatting data in an array\r\n  const getAllImagesToState = async () => {\r\n    const result = await API.graphql(graphqlOperation(listPictures));\r\n    let imageArray = await buildImageArray(result.data.listPictures.items);\r\n    setImages(imageArray);\r\n  };\r\n  const buildImageArray = async (listPictures) => {\r\n    return await getImagesFileList(listPictures);\r\n  };\r\n  const getImagesFileList = async (imageList) => {\r\n    return Promise.all(\r\n      imageList.map(async (i) => {\r\n        return getOneFormatedImage(i);\r\n      })\r\n    );\r\n  };\r\n  \r\n  const getOneFormatedImage = async (image) => {\r\n    console.log(\"getOneFormatedImage\", image);\r\n    return {\r\n      src: await Storage.get(image.file.key),\r\n      id: image.id,\r\n      owner: image.owner,\r\n      tag: image.tag,\r\n      lables: image.labels,\r\n      celeb: image.celeb,\r\n      createdAt: image.createdAt,\r\n      updatedAt: image.updatedAt,\r\n      key: image.file.key\r\n    };\r\n  };\r\n\r\n  //for deleting image\r\n  const deleteImage = async (imageId) => {\r\n    const id = {\r\n      id: imageId,\r\n    };\r\n    try {\r\n      await API.graphql(graphqlOperation(deletePicture, { input: id }));\r\n\r\n      const i = images.filter((value, index, arr) => {\r\n        return value.id !== imageId;\r\n      });\r\n      setImages(i);\r\n      setMyAlert(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Cannot delete: User doesn't own this image\");\r\n    }\r\n  };\r\n\r\n  const downloadImage = async (image) => {\r\n    console.log(\"image\", image);\r\n    const data = await Storage.get(image.key, { download: true }).then((res) =>\r\n      downloadBlob(res.Body, image.key)\r\n    );\r\n  };\r\n\r\n  function downloadBlob(blob, filename) {\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = filename || \"download\";\r\n    const clickHandler = () => {\r\n      setTimeout(() => {\r\n        URL.revokeObjectURL(url);\r\n        a.removeEventListener(\"click\", clickHandler);\r\n      }, 150);\r\n    };\r\n    a.addEventListener(\"click\", clickHandler, false);\r\n    a.click();\r\n    return a;\r\n  }\r\n\r\n  const manualLabels = async (imageId, tagValue) => {\r\n    const image = images.filter((value, index, arr) => {\r\n      return value.id === imageId;\r\n    });\r\n\r\n    let labels = image[0].labels;\r\n    labels.push(tagValue);\r\n\r\n    const input = {\r\n      id: imageId,\r\n      labels: labels,\r\n    };\r\n\r\n    try {\r\n      await API.graphql(graphqlOperation(updatePicture, { input: input }));\r\n\r\n      //Then I need to refresh the state with the new tag\r\n      await getAllImagesToState();\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Cannot edit: Authentication Failed\");\r\n    }\r\n  }\r\n\r\n  const searchImage = async (searchLabel) => {\r\n    var result;\r\n    console.log(\"searchLabel\", searchLabel);\r\n\r\n    // when no search filter is passed, revert back to full list\r\n    if (searchLabel.tag === \"\") {\r\n      await getAllImagesToState();\r\n    } else {\r\n      const filter = {\r\n        tag: {\r\n          match: {\r\n            tag: searchLabel,\r\n          },\r\n        },\r\n      };\r\n      result = await API.graphql(\r\n        graphqlOperation(searchPictures, { filter: filter })\r\n      );\r\n\r\n      if (result.data.searchPictures.items.length > 0) {\r\n        let imageArray = await buildImageArray(\r\n          result.data.searchPictures.items\r\n        );\r\n        console.log(\" imageArray\", imageArray);\r\n        setImages(imageArray);\r\n      } else {\r\n        alert(\" Sorry! nothing matches your search\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        <SearchImage searchImage={searchImage} />\r\n      </div>\r\n\r\n      {myAlert ? (\r\n        <div id=\"success-alert\" className=\"alert alert-danger\" role=\"alert\">\r\n          Image Deleted successfully!!!\r\n        </div>\r\n      ) : null}\r\n      <br />\r\n\r\n      <ImageGallery\r\n        images={images}\r\n        deleteImage={deleteImage}\r\n        downloadImage={downloadImage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\FindImage.js",["96","97","98","99","100","101","102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport { Storage, API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { createPicture } from \"../graphql/mutations\";\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\nimport Predictions from \"@aws-amplify/predictions\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./FindImage.css\";\r\n\r\nfunction FindImage(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [pics, setPics] = useState([]);\r\n  console.log(query);\r\n\r\n  const searchPhotos = async (e) => {\r\n    e.preventDefault();\r\n    unsplash.search\r\n    .photos(query)\r\n    .then(toJson)\r\n    .then((json) => {\r\n        setPics(json.results);\r\n    });\r\n  };\r\n\r\n  const unsplash = new Unsplash({\r\n    accessKey: process.env.REACT_APP_ACCESS_KEY,\r\n  });\r\n\r\n  return (\r\n    <>\r\n        <form onSubmit={searchPhotos} className=\"form-inline\" >\r\n            <div class=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"query\"\r\n                    className=\"form-control\"\r\n                    placeholder={`Search Using Labels`}\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n                </button>\r\n            </div>\r\n      </form>\r\n      <div className=\"card-list\">\r\n        {\r\n          pics.map((pic) =>\r\n            <div className=\"card\" key={pic.id}>\r\n              <img\r\n                className=\"card-image\"\r\n                alt={pic.alt_description}\r\n                src={pic.urls.full}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              ></img>\r\n            </div>)}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FindImage;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Login.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\Album.jsx",["104","105","106","107","108","109"],"import React, { useState, useEffect } from \"react\";\r\nimport { Storage, API, graphqlOperation } from \"aws-amplify\";\r\nimport { listPictures } from \"../graphql/queries\";\r\nimport { Jumbotron, Button, Card } from \"reactstrap\";\r\n\r\nimport ReactBnbGallery from \"react-bnb-gallery\";\r\nimport \"react-bnb-gallery/dist/style.css\";\r\n\r\nfunction Album(props) {\r\n  const [images, setImages] = useState([]);\r\n  const [picture] = useState(\"\");\r\n  const [myAlert, setMyAlert] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // const [searchTag, setSearchTag] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllImagesToState();\r\n  }, [picture]);\r\n\r\n  //retrieving response in json and formatting data in an array\r\n  const getAllImagesToState = async () => {\r\n    const result = await API.graphql(graphqlOperation(listPictures));\r\n    let imageArray = await buildImageArray(result.data.listPictures.items);\r\n    setImages(imageArray);\r\n  };\r\n  const buildImageArray = async (listPictures) => {\r\n    return await getImagesFileList(listPictures);\r\n  };\r\n  const getImagesFileList = async (imageList) => {\r\n    return Promise.all(\r\n      imageList.map(async (i) => {\r\n        return getOneFormatedImage(i);\r\n      })\r\n    );\r\n  };\r\n  const getOneFormatedImage = async (image) => {\r\n    console.log(\"getOneFormatedImage\", image);\r\n    return {\r\n      photo: await Storage.get(image.file.key),\r\n      number: image.id,\r\n      caption: image.tag,\r\n      subcaption: image.labels ? image.labels.join(\", \") : \"\",\r\n    };\r\n  };\r\n\r\n  console.log(images);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"jumbotron bg-transparent\">\r\n        <h1\r\n          className=\"display-3\"\r\n          style={{\r\n            color: \"black\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          Album Gallery\r\n        </h1>\r\n        <br />\r\n        <div class=\"col text-center\">\r\n          <button\r\n            className=\"btn btn-primary btn-lg\"\r\n            type=\"submit\"\r\n            onClick={() => setIsOpen(true)}\r\n          >\r\n            Open gallery\r\n          </button>\r\n        </div>\r\n        <ReactBnbGallery\r\n          show={isOpen}\r\n          photos={images}\r\n          onClose={() => setIsOpen(false)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Album;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\ImageGallery.js",["110","111","112","113","114"],"import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nimport { API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { updatePicture } from \"../graphql/mutations\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./Home.css\";\r\nimport \"./FindImage.css\";\r\n\r\nfunction ImageGallery(props) {\r\n  const [editedTag, setEditedTag] = useState(\"\");\r\n  const [imageID, setImageID] = useState(\"\");\r\n  const [toggle, setToggle] = useState(false);\r\n  //const [imageLabels, setImageLabels] = useState(undefined);\r\n  console.log(\"inside Imagegallery\", props);\r\n\r\n  const updateDB = async (payload) => {\r\n    console.log(\"inside db updateDB\", payload);\r\n    try {\r\n      await API.graphql(graphqlOperation(updatePicture, { input: payload }));\r\n    } catch (err) {\r\n      console.log(\"db write error while updateing\");\r\n    }\r\n  };\r\n\r\n  const handleOnTagChange = (newTag, imageID) => {\r\n    console.log(\"inside handleachange\", newTag, imageID);\r\n    setEditedTag(newTag);\r\n    console.log(\"editedTag\", editedTag);\r\n    const payload = {\r\n      id: imageID,\r\n      tag: editedTag,\r\n    };\r\n    updateDB(payload);\r\n  };\r\n\r\n  // class ImageGallery extends Component {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-list\">\r\n        {props.images.map((image) => (\r\n          <div className=\"card\" key={image.id}>\r\n            <Card>\r\n              <CardImg\r\n                top\r\n                width=\"100%\"\r\n                className=\"card-image\"\r\n                alt=\"Happy Face\"\r\n                src={image.src}\r\n              ></CardImg>\r\n              <CardBody>\r\n                <CardTitle tag=\"h6\" className=\"text-center\">\r\n                  Owner : {image.owner}\r\n                </CardTitle>\r\n                <CardTitle tag=\"h6\">\r\n                  <Container>\r\n                    <Row>\r\n                      <Col xs=\"6\" sm=\"4\">\r\n                        <i\r\n                          className=\"fa fa-trash\"\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                            color: \"inherit\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-start\",\r\n                          }}\r\n                          aria-hidden=\"true\"\r\n                          onClick={(event) => {\r\n                            props.deleteImage(image.id);\r\n                          }}\r\n                        ></i>\r\n                      </Col>\r\n                      <Col xs=\"6\" sm=\"4\">\r\n                        <i\r\n                          className=\"fa fa-download \"\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                            color: \"inherit\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                          download=\"download.png\"\r\n                          onClick={(event) => {\r\n                            props.downloadImage(image);\r\n                          }}\r\n                        ></i>\r\n                      </Col>\r\n                      <Col sm=\"4\">\r\n                        <i\r\n                          className=\"fa fa-edit\"\r\n                          style={{\r\n                            textDecoration: \"none\",\r\n                            color: \"inherit\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\",\r\n                          }}\r\n                          onClick={(event) => {\r\n                            setImageID(image.id);\r\n                            setToggle(true);\r\n                          }}\r\n                        ></i>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </CardTitle>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\components\\SearchImage.js",["115","116","117"],"import React, { useState } from \"react\";\r\nimport Amplify, { Storage, Predictions } from \"aws-amplify\";\r\n\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nimport mic from \"microphone-stream\";\r\nimport awsExports from \"../aws-exports\";\r\n\r\nfunction SearchImage(props) {\r\n  const [searchImage, setSearchImage] = useState(\"\");\r\n\r\n  function AudioRecorder(props) {\r\n    const [recording, setRecording] = useState(false);\r\n    const [micStream, setMicStream] = useState();\r\n    const [audioBuffer] = useState(\r\n      (function () {\r\n        let buffer = [];\r\n        function add(raw) {\r\n          buffer = buffer.concat(...raw);\r\n          return buffer;\r\n        }\r\n        function newBuffer() {\r\n          console.log(\"resetting buffer\");\r\n          buffer = [];\r\n        }\r\n\r\n        return {\r\n          reset: function () {\r\n            newBuffer();\r\n          },\r\n          addData: function (raw) {\r\n            return add(raw);\r\n          },\r\n          getData: function () {\r\n            return buffer;\r\n          },\r\n        };\r\n      })()\r\n    );\r\n\r\n    async function startRecording() {\r\n      console.log(\"start recording\");\r\n      audioBuffer.reset();\r\n\r\n      window.navigator.mediaDevices\r\n        .getUserMedia({ video: false, audio: true })\r\n        .then((stream) => {\r\n          const startMic = new mic();\r\n\r\n          startMic.setStream(stream);\r\n          startMic.on(\"data\", (chunk) => {\r\n            var raw = mic.toRaw(chunk);\r\n            if (raw == null) {\r\n              return;\r\n            }\r\n            audioBuffer.addData(raw);\r\n          });\r\n\r\n          setRecording(true);\r\n          setMicStream(startMic);\r\n        });\r\n    }\r\n\r\n    async function stopRecording() {\r\n      console.log(\"stop recording\");\r\n      const { finishRecording } = props;\r\n\r\n      micStream.stop();\r\n      setMicStream(null);\r\n      setRecording(false);\r\n\r\n      const resultBuffer = audioBuffer.getData();\r\n\r\n      if (typeof finishRecording === \"function\") {\r\n        finishRecording(resultBuffer);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"audioRecorder\">\r\n        <div>\r\n          {recording && (\r\n            <button className=\"btn btn-secondary\" onClick={stopRecording}>\r\n              <i class=\"fa fa-microphone-slash\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          )}\r\n          {!recording && (\r\n            <button className=\"btn btn-secondary\" onClick={startRecording}>\r\n              <i class=\"fa fa-microphone\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function convertFromBuffer(bytes) {\r\n    setSearchImage(\"Converting text...\");\r\n\r\n    Predictions.convert({\r\n      transcription: {\r\n        source: {\r\n          bytes,\r\n        },\r\n        language: \"en-US\",\r\n      },\r\n    })\r\n      .then(({ transcription: { fullText } }) => setSearchImage(fullText))\r\n      .catch((err) => setSearchImage(JSON.stringify(err, null, 2)));\r\n  }\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.searchImage(searchImage);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs=\"5\">\r\n          <i\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"inherit\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <AudioRecorder finishRecording={convertFromBuffer} />\r\n          </i>\r\n        </Col>\r\n        <Col xs=\"auto\">\r\n          <form onSubmit={handleSearchSubmit} className=\" form-inline \">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              value={searchImage}\r\n              onChange={({ target }) => setSearchImage(target.value)}\r\n              placeholder=\"Search Here...\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchImage;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\graphql\\queries.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\smart-gallery\\src\\graphql\\mutations.js",[],["118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":30},{"ruleId":"124","severity":1,"message":"128","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"129","line":2,"column":42,"nodeType":"126","messageId":"127","endLine":2,"endColumn":47},{"ruleId":"124","severity":1,"message":"130","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":16},{"ruleId":"124","severity":1,"message":"131","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":15},{"ruleId":"124","severity":1,"message":"132","line":12,"column":17,"nodeType":"126","messageId":"127","endLine":12,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":26,"column":50,"nodeType":"135","messageId":"136","endLine":26,"endColumn":52},{"ruleId":"124","severity":1,"message":"137","line":37,"column":9,"nodeType":"126","messageId":"127","endLine":37,"endColumn":24},{"ruleId":"124","severity":1,"message":"138","line":49,"column":19,"nodeType":"126","messageId":"127","endLine":49,"endColumn":23},{"ruleId":"124","severity":1,"message":"139","line":49,"column":25,"nodeType":"126","messageId":"127","endLine":49,"endColumn":29},{"ruleId":"133","severity":1,"message":"134","line":50,"column":53,"nodeType":"135","messageId":"136","endLine":50,"endColumn":55},{"ruleId":"124","severity":1,"message":"140","line":5,"column":24,"nodeType":"126","messageId":"127","endLine":5,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":16,"column":6,"nodeType":"143","endLine":16,"endColumn":15,"suggestions":"144"},{"ruleId":"124","severity":1,"message":"145","line":71,"column":11,"nodeType":"126","messageId":"127","endLine":71,"endColumn":15},{"ruleId":"124","severity":1,"message":"146","line":92,"column":9,"nodeType":"126","messageId":"127","endLine":92,"endColumn":21},{"ruleId":"124","severity":1,"message":"128","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"147","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":17},{"ruleId":"124","severity":1,"message":"148","line":2,"column":19,"nodeType":"126","messageId":"127","endLine":2,"endColumn":22},{"ruleId":"124","severity":1,"message":"149","line":2,"column":24,"nodeType":"126","messageId":"127","endLine":2,"endColumn":40},{"ruleId":"124","severity":1,"message":"129","line":2,"column":42,"nodeType":"126","messageId":"127","endLine":2,"endColumn":47},{"ruleId":"124","severity":1,"message":"150","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":23},{"ruleId":"124","severity":1,"message":"151","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":19},{"ruleId":"124","severity":1,"message":"152","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"124","severity":1,"message":"153","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":19},{"ruleId":"124","severity":1,"message":"154","line":4,"column":21,"nodeType":"126","messageId":"127","endLine":4,"endColumn":27},{"ruleId":"124","severity":1,"message":"155","line":4,"column":29,"nodeType":"126","messageId":"127","endLine":4,"endColumn":33},{"ruleId":"124","severity":1,"message":"156","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":17},{"ruleId":"124","severity":1,"message":"157","line":12,"column":19,"nodeType":"126","messageId":"127","endLine":12,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":18,"column":6,"nodeType":"143","endLine":18,"endColumn":15,"suggestions":"158"},{"ruleId":"124","severity":1,"message":"129","line":12,"column":33,"nodeType":"126","messageId":"127","endLine":12,"endColumn":38},{"ruleId":"124","severity":1,"message":"152","line":14,"column":8,"nodeType":"126","messageId":"127","endLine":14,"endColumn":18},{"ruleId":"124","severity":1,"message":"159","line":20,"column":10,"nodeType":"126","messageId":"127","endLine":20,"endColumn":17},{"ruleId":"124","severity":1,"message":"160","line":21,"column":10,"nodeType":"126","messageId":"127","endLine":21,"endColumn":16},{"ruleId":"124","severity":1,"message":"161","line":34,"column":9,"nodeType":"126","messageId":"127","endLine":34,"endColumn":26},{"ruleId":"124","severity":1,"message":"162","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":15},{"ruleId":"124","severity":1,"message":"147","line":2,"column":19,"nodeType":"126","messageId":"127","endLine":2,"endColumn":26},{"ruleId":"124","severity":1,"message":"152","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":18},{"ruleId":"120","replacedBy":"163"},{"ruleId":"122","replacedBy":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'AmplifyAuthenticator' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'label' is defined but never used.","'labels' is assigned a value but never used.","'celeb' is assigned a value but never used.","'setCeleb' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'celebritySearch' is assigned a value but never used.","'name' is assigned a value but never used.","'urls' is assigned a value but never used.","'getPicture' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllImagesToState'. Either include it or remove the dependency array.","ArrayExpression",["167"],"'data' is assigned a value but never used.","'manualLabels' is assigned a value but never used.","'Storage' is defined but never used.","'API' is defined but never used.","'graphqlOperation' is defined but never used.","'createPicture' is defined but never used.","'Predictions' is defined but never used.","'awsExports' is defined but never used.","'Jumbotron' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'myAlert' is assigned a value but never used.","'setMyAlert' is assigned a value but never used.",["168"],"'imageID' is assigned a value but never used.","'toggle' is assigned a value but never used.","'handleOnTagChange' is assigned a value but never used.","'Amplify' is defined but never used.",["165"],["166"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},"Update the dependencies array to be: [getAllImagesToState, picture]",{"range":"172","text":"173"},{"range":"174","text":"173"},[618,627],"[getAllImagesToState, picture]",[634,643]]